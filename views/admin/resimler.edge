<html>
	<head>
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
		<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
		<script type="text/javascript" src="/jquery-1.12.4.js"></script>
		<style>
			img{
				width: auto;
				height: auto;
				max-width: 80px;
				max-height: 80px;
			}
		</style>
	</head>
	<body>
		<img id="blah" src="" />
		<form onsubmit="return Validate(this);" method="post" action="/ckeditor/resimler/ekle" enctype='multipart/form-data'>
			<input type="file" id="resim" name="resim" class="w3-input" required/>
			<input type="submit" id="btnUpload" class="w3-btn w3-block w3-red" value="Kaydet"/>
		</form>
		<div class="w3-row">
			@each(s in sorted)
				<div class="w3-col m2 w3-center">
					<div class="w3-card-2">
						<a href="javascript://" class="thumbnail js-image-link" data-url="{{s.image}}">
							<img src="{{s.image}}">
						</a>
						<div class="w3-container"><a onclick="sil('{{s.image}}')"><i class="fa fa-times"></i></a></div>
					</div>
				</div>
			@endeach
		</div>
		<script type="text/javascript">
			var CkEditorImageBrowser = {};
			CkEditorImageBrowser.folders = [];
			CkEditorImageBrowser.images = {}; //folder => list of images
			CkEditorImageBrowser.ckFunctionNum = null;
			CkEditorImageBrowser.$folderSwitcher = null;
			CkEditorImageBrowser.$imagesContainer = null;
			CkEditorImageBrowser.init = function () {
				CkEditorImageBrowser.$folderSwitcher = $('#js-folder-switcher');
				CkEditorImageBrowser.$imagesContainer = $('#js-images-container');
				CkEditorImageBrowser.ckFunctionNum = CkEditorImageBrowser.getQueryStringParam('CKEditorFuncNum');
				CkEditorImageBrowser.initEventHandlers();
				CkEditorImageBrowser.loadData(CkEditorImageBrowser.getQueryStringParam('listUrl'), function () {
					CkEditorImageBrowser.initFolderSwitcher();
				});
			};
			CkEditorImageBrowser.loadData = function (url, onLoaded) {
				CkEditorImageBrowser.folders = [];
				CkEditorImageBrowser.images = {};
				$.getJSON(url, function (list) {
					$.each(list, function (_idx, item) {
						if (typeof(item.folder) === 'undefined') {
							item.folder = 'Images';
						}
						if (typeof(item.thumb) === 'undefined') {
							item.thumb = item.image;
						}
						CkEditorImageBrowser.addImage(item.folder, item.image, item.thumb);
					});
					onLoaded();
				}).error(function(jqXHR, textStatus, errorThrown) {
					var errorMessage;
					if (jqXHR.status < 200 || jqXHR.status >= 400) {
						errorMessage = 'HTTP Status: ' + jqXHR.status + '/' + jqXHR.statusText + ': "<strong style="color: red;">' + url + '</strong>"';
					} else if (textStatus === 'parsererror') {
						errorMessage = textStatus + ': invalid JSON file: "<strong style="color: red;">' + url + '</strong>": ' + errorThrown.message;
					} else {
						errorMessage = textStatus + ' / ' + jqXHR.statusText + ' / ' + errorThrown.message;
					}
					CkEditorImageBrowser.$imagesContainer.html(errorMessage);
				});
			};
			CkEditorImageBrowser.addImage = function (folderName, imageUrl, thumbUrl) {
				if (typeof(CkEditorImageBrowser.images[folderName]) === 'undefined') {
					CkEditorImageBrowser.folders.push(folderName);
					CkEditorImageBrowser.images[folderName] = [];
				}
				CkEditorImageBrowser.images[folderName].push({
					"imageUrl": imageUrl,
					"thumbUrl": thumbUrl
				});
			};
			CkEditorImageBrowser.initFolderSwitcher = function () {
				var $switcher = CkEditorImageBrowser.$folderSwitcher;
				$switcher.find('li').remove();
				$.each(CkEditorImageBrowser.folders, function (idx, folderName) {
					var $option = $('<li></li>').data('idx', idx).text(folderName);
					$option.appendTo($switcher);
				});
				if (CkEditorImageBrowser.folders.length === 0) {
					$switcher.remove();
					CkEditorImageBrowser.$imagesContainer.text('No images.');
				} else {
					if (CkEditorImageBrowser.folders.length === 1) {
						$switcher.hide();
					}
					$switcher.find('li:first').click();
				}
			};
			CkEditorImageBrowser.renderImagesForFolder = function (folderName) {
				var images = CkEditorImageBrowser.images[folderName];
				var templateHtml = $('#js-template-image').html();
				CkEditorImageBrowser.$imagesContainer.html('');
				$.each(images, function (_idx, imageData) {
					var html = templateHtml;
					html = html.replace('%imageUrl%', imageData.imageUrl);
					html = html.replace('%thumbUrl%', imageData.thumbUrl);
					html = html.replace('%thumbImage%', imageData.thumbUrl);
					var $item = $($.parseHTML(html));
					CkEditorImageBrowser.$imagesContainer.append($item);
				});
			};
			CkEditorImageBrowser.initEventHandlers = function () {
				$(document).on('click', '#js-folder-switcher li', function () {
					var idx = parseInt($(this).data('idx'), 10),
						folderName = CkEditorImageBrowser.folders[idx];
					var delete_folder = '<span class="delete_folder"><i class="fa fa-times" aria-hidden="true"></i></span>';
					$(this).siblings('li').removeClass('active');
					$(this).addClass('active');
					CkEditorImageBrowser.renderImagesForFolder(folderName);
				});
				$(document).on('click', '.js-image-link', function () {
					window.opener.CKEDITOR.tools.callFunction(CkEditorImageBrowser.ckFunctionNum, $(this).data('url'));
					window.close();
				});
			};
			CkEditorImageBrowser.getQueryStringParam = function (name) {
				var regex = new RegExp('[?&]' + name + '=([^&]*)');
				var result = window.location.search.match(regex);
				return (result && result.length > 1 ? decodeURIComponent(result[1]) : null);
			};
			CkEditorImageBrowser.init();
			function sil(image) {
				$.ajax({
					url: '/ckeditor/resimler/sil',
					type: 'POST',
					dataType: 'text',
					data: {
						url_del: image
					},
					success: function(result){
						location.reload();
					}
				});
			}
			var _validFileExtensions = [".jpg", ".jpeg",".gif", ".png", ".svg"];
			function Validate(oForm) {
				var arrInputs = oForm.getElementsByTagName("input");
				if(arrInputs === ''){
					alert('File upload: *jpg *jpeg *gif *png *svg');
					return false;
				}
				for (var i = 0; i < arrInputs.length; i++) {
					var oInput = arrInputs[i];
					if (oInput.type == "file") {
						var sFileName = oInput.value;
						if (sFileName.length > 0) {
							var blnValid = false;
							for (var j = 0; j < _validFileExtensions.length; j++) {
								var sCurExtension = _validFileExtensions[j];
								if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
									blnValid = true;
									break;
								}
							}
							if (!blnValid) {
								alert('File upload: *jpg *jpeg *gif *png *svg');
								return false;
							}
						}
					}
				}
				return true;
			}
			$("#resim").change(function(){
				if (this.files && this.files[0]) {
					var reader = new FileReader();
					reader.onload = function (e) {
						$('#blah').attr('src', e.target.result);
					}
					reader.readAsDataURL(this.files[0]);
				}
			});
		</script>
	</body>
</html>